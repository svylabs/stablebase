{
  "name": "stakeDFID",
  "description": "Stake $DFID to earn protocol rewards",
  "contracts": [
    {
      "name": "StabilityPool",
      "addresses": {
        "1": "0x590e59BabaFf67FB3f10AD9eF315242D2A17F8d0",
        "5115": "0x901e951592B147968e7e4Dbf5792de408Ac0480e"
      },
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_rewardSenderActive",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "OwnableInvalidOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "OwnableUnauthorizedAccount",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "CollateralClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "CollateralRewardAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "frontendFee",
              "type": "uint256"
            }
          ],
          "name": "DFireRewardClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateralReceived",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakeScalingFactor",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateralPerToken",
              "type": "uint256"
            }
          ],
          "name": "LiquidationPerformed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Received",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "RewardAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalReward",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardFrontendFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateralFrontendFee",
              "type": "uint256"
            }
          ],
          "name": "RewardClaimed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "lastTime",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "currentTime",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalRewardPerToken",
              "type": "uint256"
            }
          ],
          "name": "SBRRewardsAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "stakeResetCount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "scalingFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalRewardPerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalCollateralPerToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSBRRewardPerToken",
                  "type": "uint256"
                }
              ],
              "indexed": false,
              "internalType": "struct IStabilityPool.StakeResetSnapshot",
              "name": "snapshot",
              "type": "tuple"
            }
          ],
          "name": "ScalingFactorReset",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Staked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Unstaked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "BASIS_POINTS_DIVISOR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "addCollateralReward",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "name": "addReward",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "claim",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "frontend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "name": "claim",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "collateralLoss",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "name": "getUser",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardSnapshot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralSnapshot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cumulativeProductScalingFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stakeResetCount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IStabilityPool.UserInfo",
              "name": "user",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "isLiquidationPossible",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lastSBRRewardDistributedTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "minimumScalingFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            }
          ],
          "name": "performLiquidation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "precision",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rewardLoss",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rewardSenderActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sbrDistributionRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sbrRewardDistributionEndTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sbrRewardDistributionStatus",
          "outputs": [
            {
              "internalType": "enum StabilityPool.SBRRewardDistribution",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sbrRewardLoss",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "sbrRewardSnapshots",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "rewardSnapshot",
              "type": "uint256"
            },
            {
              "internalType": "enum StabilityPool.SBRRewardDistribution",
              "name": "status",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sbrToken",
          "outputs": [
            {
              "internalType": "contract IMintableToken",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stableBaseCDP",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_sbrToken",
              "type": "address"
            }
          ],
          "name": "setAddresses",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stableBaseCDP",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "frontend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "name": "stake",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "name": "stake",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakeResetCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "stakeResetSnapshots",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "scalingFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalRewardPerToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalCollateralPerToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSBRRewardPerToken",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakeScalingFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalCollateralPerToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalRewardPerToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSbrRewardPerToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalStakedRaw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "unstake",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "frontend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "name": "unstake",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "name": "userPendingCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "name": "userPendingReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "name": "userPendingRewardAndCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "users",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rewardSnapshot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralSnapshot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cumulativeProductScalingFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeResetCount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ]
    },
    {
      "name": "DFIDToken",
      "addresses": {
        "1": "0x8b52c6a0ECDd3952E8F14F711D638fd2b4dE2529",
        "5115": "0x6b11C5A44A8f21C3cDAe84e6Bc48DbE6f366Ba04"
      },
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "name": "ERC20InsufficientAllowance",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "name": "ERC20InsufficientBalance",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "name": "ERC20InvalidApprover",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "name": "ERC20InvalidReceiver",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "ERC20InvalidSender",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "ERC20InvalidSpender",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "OwnableInvalidOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "OwnableUnauthorizedAccount",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Burn",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stableBaseCDP",
              "type": "address"
            }
          ],
          "name": "setAddresses",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalBurned",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ]
    }
  ],
  "networks": [
    {
      "type": "ethereum",
      "name": "Ethereum Mainnet",
      "config": {
        "chainId": 1
      }
    },
    {
      "type": "ethereum",
      "name": "Citrea Bitcoin Testnet",
      "config": {
        "chainId": 5115,
        "exploreUrl": "https://explorer.testnet.citrea.xyz",
        "rpcUrl": "https://rpc.testnet.citrea.xyz"
      }
    }
  ],
  "components": [
    {
      "id": "totalStaked",
      "label": "Staked DFID(in StabilityPool)",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "${formatted} $DFID"
      },
      "events": [
        {
          "type": "onLoad",
          "code": "async function loadStake() {\n    if (!mcLib.context.connectedAddress) {\n        return {};\n    }\n    let user = await mcLib.contracts.StabilityPool.methods.users(mcLib.context.connectedAddress).call();\n    if (user.stake != BigInt(0)) {\n        user = await mcLib.contracts.StabilityPool.methods.getUser(mcLib.context.connectedAddress).call();\n    }\n    let rewards = {};\n    if (user.stake != BigInt(0)) {\n        rewards = await mcLib.contracts.StabilityPool.methods.userPendingReward(mcLib.context.connectedAddress).call();\n    }\n    const balance = await mcLib.contracts.DFIDToken.methods.balanceOf(mcLib.context.connectedAddress).call();\n    console.log('Stake:', user, 'Rewards:', rewards, 'Balance:', balance);\n    return {\n        stake: user,\n        totalStaked: {\n            value: user.stake,\n            formatted: mcLib.web3.utils.fromWei(user.stake.toString(), 'ether'),\n        },\n        totalDFIDBalance: {\n           value: balance,\n           formatted: mcLib.web3.utils.fromWei(balance.toString(), 'ether'),\n        },\n        pendingRewards: rewards,\n        approveDescription: true,\n        stakeDescription: true,\n    }\n}\n\nloadStake();"
        }
      ]
    },
    {
      "id": "totalDFIDBalance",
      "label": "Total DFID(in wallet)",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "${formatted} $DFID"
      }
    },
    {
      "id": "stakeAmount",
      "label": "Additional Stake",
      "type": "text",
      "placement": "input",
      "config": {
        "showEmpty": true
      },
      "events": [
        {
          "type": "onChange",
          "code": "async function calculateUpdatedStake() {\n    const value = data.stakeAmount;\n    if (value === \"\") {\n        return {\n            additionalStake: BigInt(0),\n            updatedStake: data.totalStaked.value\n        }\n    }\n    const additionalStake =  BigInt(mcLib.web3.utils.toWei(value, 'ether'));\n    return {\n        additionalStake: additionalStake,\n        updatedStake: {\n            value: data.totalStaked.value + additionalStake,\n            formatted: mcLib.web3.utils.fromWei(data.totalStaked.value + additionalStake, 'ether')\n        },\n        approveBtn: true,\n        stakeDescription: true,\n    }\n}\n\ncalculateUpdatedStake();"
        }
      ]
    },
    {
      "id": "updatedStake",
      "label": "Stake Amount(updated after the transaction)",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "${formatted} $DFID"
      }
    },
    {
      "id": "approveDescription",
      "label": "Step 1",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "Approve DFID to be spent by the StabilityPool"
      }
    },
    {
      "id": "approveBtn",
      "label": "Approve DFID",
      "type": "button",
      "placement": "action",
      "code": "\nasync function approveDFID() {\n    const value = data.stakeAmount;\n    if (value === \"\") {\n        return {};\n    }\n    const additionalStake =  BigInt(mcLib.web3.utils.toWei(value, 'ether'));\n    console.log(\"Approve DFID: \", additionalStake, \"Address: \", mcLib.contracts.StabilityPool);\n    const estimatedGas = await mcLib.contracts.DFIDToken.methods.approve(mcLib.contracts.StabilityPool._address, additionalStake).estimateGas({ from: mcLib.context.connectedAddress });\n    const approveTx = mcLib.contracts.DFIDToken.methods.approve(mcLib.contracts.StabilityPool._address, additionalStake);\n    const stakeTxReceipt = await approveTx.send({ from: mcLib.context.connectedAddress, gas: estimatedGas });\n    return {\n        approveBtn: false,\n        stakeBtn: true,\n        approveTxLink: stakeTxReceipt.transactionHash\n    }\n}\n\napproveDFID();"
    },
    {
      "id": "approveTxLink",
      "label": "Approve DFID Transaction",
      "type": "link",
      "placement": "output",
      "config": {
        "transactionConfig": {
          "type": "transaction"
        }
      }
    },
    {
      "id": "stakeDescription",
      "label": "Step 2",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "Stake DFID in the StabilityPool"
      }
    },
    {
      "id": "stakeBtn",
      "label": "Stake DFID",
      "type": "button",
      "placement": "action",
      "code": "\nasync function stakeDFID() {\n    const value = data.stakeAmount;\n    if (value === \"\") {\n        return {};\n    }\n    const additionalStake =  BigInt(mcLib.web3.utils.toWei(value, 'ether'));\n    const estimatedGas = await mcLib.contracts.StabilityPool.methods.stake(additionalStake).estimateGas({ from: mcLib.context.connectedAddress });\n    const stakeTx = mcLib.contracts.StabilityPool.methods.stake(additionalStake);\n    const stakeTxReceipt = await stakeTx.send({ from: mcLib.context.connectedAddress, gas: estimatedGas });\n    return {\n        stakeBtn: false,\n        stakeDescription: false,\n        stakeTxLink: stakeTxReceipt.transactionHash\n    }\n}\n\nstakeDFID();"
    },
    {
      "id": "stakeTxLink",
      "label": "Stake DFID Transaction",
      "type": "link",
      "placement": "output",
      "config": {
        "transactionConfig": {
          "type": "transaction"
        }
      }
    }
  ]
}