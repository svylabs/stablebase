{
  "name": "Borrow $DFID",
  "description": "Borrow $DFID on StableBase with $ETH as collateral",
  "components": [
    {
      "id": "safeId",
      "label": "Safe ID",
      "type": "description",
      "placement": "output",
      "events": [
        {
          "type": "onLoad",
          "code": "async function loadSafe(data, mcLib) {\n    let safeId = data.safeId;\n    if (!safeId && mcLib.context.connectedAddress) {\n        safeId = mcLib.web3.utils.sha3(mcLib.context.connectedAddress);\n    }\n    if (safeId) {\n        //console.log(document.cookie);\n        //console.log(localStorage.getItem('safeId'));\n        console.log('Loading Safe:', safeId);\n        const price = BigInt(await mcLib.contracts.PriceOracle.methods.lastGoodPrice().call());\n        const safe = await mcLib.contracts.StableBaseCDP.methods.safes(safeId).call();\n        let safeOwner = \"0x0\";\n        try {\n            safeOwner = await mcLib.contracts.StableBaseCDP.methods.ownerOf(safeId).call();\n        } catch (e) {\n            console.error('Error getting safe owner:', e);\n        }\n        const balance = await mcLib.web3.eth.getBalance(mcLib.context.connectedAddress);\n        console.log('Safe:', safe, 'Owner:', safeOwner, 'Balance:', balance, mcLib.context.connectedAddress);\n        if (safeOwner.toLowerCase() !== mcLib.context.connectedAddress.toLowerCase() && safe.collateralAmount > BigInt(0)) {\n            console.error('Need to generate a new SafeId as the safe is already owned by someone');\n            return null;\n        }\n        const flow  = {};\n        let maxBorrowAmount = BigInt(0);\n        if (safeOwner.toLowerCase() == mcLib.context.connectedAddress.toLowerCase() && safe.collateralAmount > BigInt(0)) {\n            const collateralValue = BigInt(safe.collateralAmount) * price / BigInt(1e18);\n            maxBorrowAmount = (collateralValue * BigInt(10000)) / BigInt(11000) - safe.borrowedAmount;\n            if (maxBorrowAmount > BigInt(0)) {\n                flow.borrowBtn = true;\n                flow.borrowDescription = true;\n                flow.borrow = {\n                    ...data.borrow,\n                    maxToAmount: maxBorrowAmount.toString()\n                };\n                flow.collateralValue = collateralValue;\n            }\n        }\n        return {\n            safeId: safeId,\n            safe: safe,\n            totalDebt: {\n                value: safe.borrowedAmount,\n                formatted: mcLib.web3.utils.fromWei(safe.borrowedAmount.toString(), 'ether'),\n                symbol: \"DFID\"\n            },\n            totalCollateral: {\n                value: safe.collateralAmount,\n                formatted: mcLib.web3.utils.fromWei(safe.collateralAmount.toString(), 'ether'),\n                symbol: mcLib.context.chainId === 1 ? \"ETH\" : \"cBTC\"\n            },\n            collateralPriceFormatted: mcLib.web3.utils.fromWei(price.toString(), 'ether') + \" USD\",\n            collateralPrice: price,\n            nativeTokenBalance: balance,\n            ...flow\n        }\n    } else {\n        return {\n\n        };\n    }\n}\n\n\nloadSafe(data, mcLib);"
        }
      ]
    },
    {
      "id": "totalCollateral",
      "label": "Total Collateral Deposited",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "${formatted} ${symbol}"
      }
    },
    {
      "id": "totalDebt",
      "label": "Total Debt",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "${formatted} ${symbol}"
      }
    },
    {
      "id": "collateralPriceFormatted",
      "label": "Collateral Price",
      "type": "description",
      "placement": "output"
    },
    {
      "id": "borrow",
      "label": "Borrow $DFID",
      "type": "swap",
      "placement": "input",
      "code": "",
      "config": {
        "swapConfig": {
          "heading": "Deposit Collateral",
          "fromTokenLabel": "Deposit",
          "toTokenLabel": "Borrow",
          "fromAmountLabel": "Deposit Amount",
          "maxFromAmountLabel": "Maximum Deposit Amount",
          "toAmountLabel": "Borrow Amount",
          "maxToAmountLabel": "Maximum Borrowable Amount",
          "tokens": [
            {
              "chainId": 1,
              "name": "ETH",
              "symbol": "ETH (Native)",
              "address": "1-eth",
              "decimals": 18,
              "logoURI": "https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/info/logo.png",
              "listType": "from"
            },
            {
              "chainId": 5115,
              "name": "Citrea - Bitcoin",
              "symbol": "cBTC",
              "address": "5115-cbtc",
              "decimals": 18,
              "logoURI": "https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/bitcoin/info/logo.png",
              "listType": "from"
            },
            {
              "chainId": 1,
              "name": "D.FI.Dollar",
              "symbol": "DFID",
              "address": "1-dfid",
              "decimals": 18,
              "logoURI": "https://raw.githubusercontent.com/svylabs/stablebase/main/icons/dfid/icon.png",
              "listType": "to"
            },
            {
              "chainId": 5115,
              "name": "D.FI.Dollar",
              "symbol": "DFID",
              "address": "5115-dfid",
              "decimals": 18,
              "logoURI": "https://raw.githubusercontent.com/svylabs/stablebase/main/icons/dfid/icon.png",
              "listType": "to"
            }
          ]
        }
      },
      "events": [
        {
          "type": "onLoad",
          "code": "/*\n  Fetch the total balance of the default token selected\n*/\nconst fetchTotalBalance = async (data, mcLib) => {\n  if (!mcLib.context.connectedAddress) {\n      return {};\n  }\n  const balance = await mcLib.web3.eth.getBalance(mcLib.context.connectedAddress);\n   return {\n      borrow: {\n          ...data.borrow,\n          maxFromAmount: balance.toString()\n      }\n   }\n};\n\nfetchTotalBalance(data, mcLib);"
        },
        {
          "type": "onChange",
          "code": "/*\n  Fetch the total balance of the default token selected\n*/\nconst estimate = async (data, mcLib) => {\n    const depositAmount = data.borrow[\"fromAmount\"];\n    console.log(\"On change: estimate: \", data, depositAmount);\n    const borrowAmount = data.borrow.toAmount;\n    if (depositAmount) {\n      const formattedAmount = mcLib.web3.utils.toWei(depositAmount, 'ether');\n      const collateralValue = BigInt(formattedAmount) * data.collateralPrice / BigInt(1e18);\n      const maxBorrowAmount = (collateralValue * BigInt(10000)) / BigInt(11000);\n      return {\n          borrow: {\n              ...data.borrow,\n              maxToAmount: maxBorrowAmount.toString()\n          },\n          collateralValue: data.collateralValue || collateralValue\n      }\n    } else {\n      return {};\n    }\n  };\n  \n  estimate(data, mcLib);"
        }
      ],
      "order": 0
    },
    {
      "id": "shieldingRate",
      "label": "Shielding Rate(in %)",
      "type": "slider",
      "placement": "input",
      "code": "",
      "config": {
        "sliderConfig": {
          "message": "Please specify the range of values. You can customize the minimum, maximum, value and step values below.",
          "interval": {
            "min": 0,
            "max": 3
          },
          "value": 0.2,
          "step": 0.01
        }
      },
      "events": [
        {
          "type": "onChange",
          "code": "async function calculateFeeAndBorrowAmount() {\n    // Fetch the total borrow amount\n    const borrowAmount = BigInt(mcLib.web3.utils.toWei(data.borrow.toAmount, 'ether'));\n    console.log(\"Borrow amount: \", borrowAmount, data);\n    if (data.shieldingRate && borrowAmount) {\n        // Get the shielding rate\n        const shieldingRate = BigInt(\"\" + parseInt(parseFloat(data.shieldingRate) * 100));\n        console.log(\"Shielding rate: \", shieldingRate, borrowAmount);\n        // calculate fee\n        const fee = (borrowAmount * shieldingRate) / BigInt(10000);\n        // calculate borrow amount\n        const borrowAmountAfterFee = borrowAmount - fee;\n        const flow = {};\n        if (data.safe?.collateralAmount > BigInt(0)) {\n            flow.borrowBtn = true;\n            flow.borrowDescription = true;\n        } else {\n            flow.openSafeDescription = true;\n            flow.openSafeBtn = true;\n        }\n        return {\n            shieldingFee: {\n                value: fee,\n                formatted: mcLib.web3.utils.fromWei(fee.toString(), 'ether')\n            },\n            borrowAmount: {\n                value: borrowAmountAfterFee,\n                formatted: mcLib.web3.utils.fromWei(borrowAmountAfterFee.toString(), 'ether')\n            },\n            ...flow\n        }\n    } else {\n        return {};\n    }\n}\ncalculateFeeAndBorrowAmount();"
        }
      ],
      "order": 1
    },
    {
      "id": "shieldingFee",
      "label": "Total fee(to pre-pay)",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "${formatted} $DFID"
      }
    },
    {
      "id": "borrowAmount",
      "label": "You Get",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "${formatted} $DFID"
      }
    },
    {
      "id": "openSafeDescription",
      "label": "Step 1",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "Deposit collateral: This transaction will lock the collateral in the stablebase contract"
      }
    },
    {
      "id": "openSafeBtn",
      "label": "Step 1: Open Safe",
      "type": "button",
      "placement": "action",
      "code": "async function openSafe() {\n    const depositAmount = data.borrow.fromAmount;\n    const depositAmountInWei = mcLib.web3.utils.toWei(depositAmount, 'ether');\n    const safeId = data.safeId;\n    const gasEstimate = await mcLib.contracts.StableBaseCDP.methods.openSafe(safeId, depositAmountInWei).estimateGas({ from: mcLib.context.connectedAddress, value: depositAmountInWei });\n    const tx = mcLib.contracts.StableBaseCDP.methods.openSafe(safeId, depositAmountInWei);\n    const txReceipt = await tx.send({ from: mcLib.context.connectedAddress, value: depositAmountInWei, gas: gasEstimate });\n    console.log(\"Open Safe:\", txReceipt);\n    return {\n        openSafeDescription: false,\n        openSafeBtn: false,\n        openSafeTxLink: txReceipt.transactionHash,\n        borrowBtn: true,\n        borrowDescription: true\n    };\n}\n\nopenSafe();"
    },
    {
      "id": "openSafeTxLink",
      "label": "Open Safe Transaction Link",
      "type": "link",
      "placement": "output",
      "config": {
        "transactionConfig": {
          "type": "transaction"
        }
      }
    },
    {
      "id": "borrowDescription",
      "label": "Step 2",
      "type": "description",
      "placement": "output",
      "config": {
        "template": "Borrow $DFID: This transaction will mint $DFID and add it to your wallet"
      }
    },
    {
      "id": "borrowBtn",
      "label": "Step 2: Borrow",
      "type": "button",
      "placement": "action",
      "code": "function getNearestSafeInQueue(value, nodes) {\n    console.log(\"Nodes \", nodes.n.length, nodes);\n    if (nodes.n.length === 0) {\n        return BigInt(0);\n    } else {\n        for (let i = 0; i < nodes.n.length; i++) {\n            console.log(\"Iteration: \", i, value);\n            if (value >= nodes.n[i].value) {\n                if (i > 0) {\n                    return nodes.n[i-1].next;\n                } else {\n                    return BigInt(0);\n                }\n            }\n        }\n    }\n}\n\nasync function borrow() {\n    if (data.safeId) {  \n        const borrowAmount = data.borrow.toAmount;\n        const borrowAmountInWei = mcLib.web3.utils.toWei(borrowAmount, 'ether');\n        if (BigInt(borrowAmountInWei) > BigInt(data.borrow.maxToAmount)) {\n            return {\n                borrowDescription: \"Borrow amount exceeds the maximum borrow amount\",\n            };\n        }\n        const safeId = data.safeId;\n        const shieldingRate = BigInt(\"\" + parseInt(parseFloat(data.shieldingRate) * 100));\n        const safesForRedemption = await mcLib.contracts.RedemptionQueue.methods.getNodes(BigInt(0), BigInt(50)).call();\n        const safesForLiquidation = await mcLib.contracts.LiquidationQueue.methods.getNodes(BigInt(0), BigInt(50)).call();\n        let weight = shieldingRate;\n        if (data.safe) {\n            weight += data.safe.weight;\n        } else if (safesForRedemption.value > 0) {\n            weight += safesForRedemption[0].value;\n        }\n        console.log(\"Weight: \", weight);\n        const nearestSafeInRedemptionQueue = getNearestSafeInQueue(weight, safesForRedemption);\n        const ratio = (BigInt(borrowAmountInWei) * BigInt(10 ** 18)) / data.collateralValue;\n        console.log(\"Ratio: \", ratio, borrowAmountInWei, nearestSafeInRedemptionQueue);\n        const nearestSafeInLiquidationQueue = getNearestSafeInQueue(ratio, safesForLiquidation);\n        console.log(\"Nearest safe in liquidation queue: \", nearestSafeInLiquidationQueue);\n        const gasEstimate = await mcLib.contracts.StableBaseCDP.methods.borrow(safeId, borrowAmountInWei, shieldingRate, nearestSafeInLiquidationQueue, nearestSafeInRedemptionQueue).estimateGas({ from: mcLib.context.connectedAddress });\n        console.log(\"Borrow amount: \", borrowAmount, \"Shielding rate: \", shieldingRate, \"Nearest safe in redemption queue: \", nearestSafeInRedemptionQueue, \"Nearest safe in liquidation queue: \", nearestSafeInLiquidationQueue, \"Gas estimate: \", gasEstimate);\n        const tx = mcLib.contracts.StableBaseCDP.methods.borrow(safeId, borrowAmountInWei, shieldingRate, nearestSafeInLiquidationQueue, nearestSafeInRedemptionQueue);\n        const txReceipt = await tx.send({ from: mcLib.context.connectedAddress, gas: gasEstimate + BigInt(100000)});\n        return {\n            borrowBtn: false,\n            borrowDescription: false,\n            borrowTxLink: txReceipt.transactionHash\n        }\n    }\n}\n\nborrow();"
    },
    {
      "id": "borrowTxLink",
      "label": "Borrow Transaction Link",
      "type": "link",
      "placement": "output",
      "code": "",
      "config": {
        "transactionConfig": {
          "type": "transaction"
        }
      },
      "events": [],
      "order": 5
    }
  ],
  "contracts": [
    {
      "name": "StableBaseCDP",
      "addresses": {
        "1": "0xaF026bf59B738bDc7FD8899a641D79a6d5cEb151",
        "5115": "0x108d105FFe07C9615939DeE88A4Fe2ECD62Acdc7"
      },
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "ERC721IncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ERC721InsufficientApproval",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "name": "ERC721InvalidApprover",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "ERC721InvalidOperator",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "ERC721InvalidOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "name": "ERC721InvalidReceiver",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "ERC721InvalidSender",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ERC721NonexistentToken",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "OwnableInvalidOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "OwnableUnauthorizedAccount",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ReentrancyGuardReentrantCall",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newRatio",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "AddedCollateral",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256"
            }
          ],
          "name": "BatchMetadataUpdate",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "nearestSpotInRedemptionQueue",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "Borrowed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "ConnectedToPriceFeed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "sbrStakersFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stabilityPoolFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "canRefund",
              "type": "uint256"
            }
          ],
          "name": "FeeDistributed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "FeeRefund",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "topupRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newWeight",
              "type": "uint256"
            }
          ],
          "name": "FeeTopup",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "LiquidatedUsingSecondaryMechanism",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "LiquidatedUsingStabilityPool",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ],
          "name": "LiquidationFeePaid",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gasCompensated",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ],
          "name": "LiquidationGasCompensationPaid",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newRatio",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "nextNode",
              "type": "uint256"
            }
          ],
          "name": "LiquidationQueueUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "MetadataUpdate",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "OpenSafe",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "redemptionId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ],
          "name": "OwnerFeePaid",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "redemptionId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ],
          "name": "OwnerRedemptionFeeDistributed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "redemptionId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "refund",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "name": "OwnerRefunded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "redemptionId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "refundedToOwner",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "remaningToRedeem",
              "type": "uint256"
            }
          ],
          "name": "Redeemed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "redemptionId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "redeemedCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "RedeemedBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "redemptionId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateralToRedeem",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateralToReturn",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ],
          "name": "RedeemerFeePaid",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "redemptionId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ],
          "name": "RedeemerRedemptionFeeDistributed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newWeight",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "prevNode",
              "type": "uint256"
            }
          ],
          "name": "RedemptionQueueUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "collateralAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrowedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feePaid",
                  "type": "uint256"
                }
              ],
              "indexed": false,
              "internalType": "struct IStableBase.Safe",
              "name": "safe",
              "type": "tuple"
            }
          ],
          "name": "RemovedSafe",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newRatio",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "Repaid",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "refundedCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "SafeClosed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            }
          ],
          "name": "SafeRemovedFromLiquidationQueue",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            }
          ],
          "name": "SafeRemovedFromRedemptionQueue",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "debtAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateralIncrease",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "debtIncrease",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "SafeUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "WithdrawnCollateral",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "BOOTSTRAP_MODE_DEBT_THRESHOLD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "EXTRA_GAS_COMPENSATION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MINIMUM_DEBT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "PROTOCOL_MODE",
          "outputs": [
            {
              "internalType": "enum SBStructs.Mode",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "REDEMPTION_BASE_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "REDEMPTION_LIQUIDATION_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "SBR_FEE_REWARD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "addCollateral",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "adjustPosition",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shieldingRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInRedemptionQueue",
              "type": "uint256"
            }
          ],
          "name": "borrow",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "collateralAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrowedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feePaid",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IStableBase.Safe",
              "name": "safe",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "amountToRedeem",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralPrice",
              "type": "uint256"
            }
          ],
          "name": "calculateRedemptionAmountsAndFee",
          "outputs": [
            {
              "internalType": "bool",
              "name": "borrowMode",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_collateralToRedeem",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amountToRedeem",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amountToRefund",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_ownerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_redeemerFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            }
          ],
          "name": "closeSafe",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "collateralLoss",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cumulativeCollateralPerUnitCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cumulativeDebtPerUnitCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "debtLoss",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "dfirTokenStaking",
          "outputs": [
            {
              "internalType": "contract IDFIRStaking",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "topupRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInRedemptionQueue",
              "type": "uint256"
            }
          ],
          "name": "feeTopup",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            }
          ],
          "name": "getInactiveDebtAndCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "liquidate",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            }
          ],
          "name": "liquidateSafe",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "liquidationSnapshots",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "collateralPerCollateralSnapshot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "debtPerCollateralSnapshot",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "mode",
          "outputs": [
            {
              "internalType": "enum SBStructs.Mode",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "name": "openSafe",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "priceOracle",
          "outputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "redeem",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "repay",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "safes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrowedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "safesOrderedForLiquidation",
          "outputs": [
            {
              "internalType": "contract IDoublyLinkedList",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "safesOrderedForRedemption",
          "outputs": [
            {
              "internalType": "contract IDoublyLinkedList",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sbdToken",
          "outputs": [
            {
              "internalType": "contract IMintableToken",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sbrStakingPoolCanReceiveRewards",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sbdToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_priceOracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stabilityPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_dfirTokenStaking",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_safesOrderedForLiquidation",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_safesOrderedForRedemption",
              "type": "address"
            }
          ],
          "name": "setAddresses",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "canReceiveRewards",
              "type": "bool"
            }
          ],
          "name": "setCanSBRStakingPoolReceiveRewards",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "canReceiveRewards",
              "type": "bool"
            }
          ],
          "name": "setCanStabilityPoolReceiveRewards",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stabilityPool",
          "outputs": [
            {
              "internalType": "contract IStabilityPool",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stabilityPoolCanReceiveRewards",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "newTokenURI",
              "type": "string"
            }
          ],
          "name": "updateTokenURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "withdrawCollateral",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ]
    },
    {
      "name": "PriceOracle",
      "addresses": {
        "1": "0x4c517d4e2c851ca76d7ec94b805269df0f2201de",
        "5115": "0x8E2A54197A9F89E26F85080B63E6D969eec3733a"
      },
      "abi": [
        {
          "constant": true,
          "inputs": [],
          "name": "lastGoodPrice",
          "outputs": [
            {
              "name": "",
              "type": "int256"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        }
      ]
    },
    {
      "name": "RedemptionQueue",
      "addresses": {
        "1": "0x7944588320547E46ddD0b0816E76678C0C4cB8A1",
        "5115": "0x1F9E6cCad7C8870bB40a17EdDd43a75f4bF0E440"
      },
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "get",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getHead",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "getNode",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "beginAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            }
          ],
          "name": "getNodes",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node[50]",
              "name": "n",
              "type": "tuple[50]"
            },
            {
              "internalType": "uint256",
              "name": "totalFound",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getTail",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ]
    },
    {
      "name": "LiquidationQueue",
      "addresses": {
        "1": "0x86644d53B0bD9032D16FEEE1f856767481a16884",
        "5115": "0xfaD62505b37bc196d23C3396B35e0d006fa534e2"
      },
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "get",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getHead",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "getNode",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "beginAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            }
          ],
          "name": "getNodes",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node[50]",
              "name": "n",
              "type": "tuple[50]"
            },
            {
              "internalType": "uint256",
              "name": "totalFound",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getTail",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ]
    }
  ],
  "networks": [
    {
      "type": "ethereum",
      "name": "Ethereum Mainnet",
      "config": {
        "chainId": 1
      }
    },
    {
      "type": "ethereum",
      "name": "Citrea Bitcoin Testnet",
      "config": {
        "chainId": 5115,
        "exploreUrl": "https://explorer.testnet.citrea.xyz",
        "rpcUrl": "https://rpc.testnet.citrea.xyz"
      }
    }
  ]
}