{
  "name": "Borrow $DFID",
  "description": "Borrow $DFID on StableBase with $ETH as collateral",
  "components": [
    {
      "id": "safeId",
      "label": "Safe ID",
      "type": "description",
      "placement": "output",
      "events": [
        {
          "type": "onLoad",
          "code": "async function loadSafe(data, mcLib) {\n    let safeId = data.safeId;\n    if (!safeId && mcLib.context.connectedAddress) {\n        safeId = mcLib.web3.utils.sha3(mcLib.context.connectedAddress);\n    }\n    if (safeId) {\n        //console.log(document.cookie);\n        //console.log(localStorage.getItem('safeId'));\n        console.log('Loading Safe:', safeId);\n        const price = BigInt(await mcLib.contracts.PriceOracle.methods.lastGoodPrice().call());\n        const safe = await mcLib.contracts.StableBaseCDP.methods.safes(safeId).call();\n        const safeOwner = await mcLib.contracts.StableBaseCDP.methods.ownerOf(safeId);\n        const balance = await mcLib.web3.eth.getBalance(mcLib.context.connectedAddress);\n        if (safeOwner !== mcLib.context.connectedAddress && safe.collateralAmount > BigInt(0)) {\n            console.error('Need to generate a new SafeId as the safe is already owned by someone');\n            return null;\n        }\n        return {\n            safeId: safeId,\n            safe: safe,\n            totalDebt: safe.borrowedAmount,\n            totalCollateral: safe.collateralAmount,\n            collateralPriceFormatted: mcLib.web3.utils.fromWei(price.toString(), 'ether') + \" USD\",\n            collateralPrice: price,\n            nativeTokenBalance: balance\n        }\n    } else {\n        return {\n\n        };\n    }\n}\n\n\nloadSafe(data, mcLib);"
        }
      ]
    },
    {
      "id": "totalCollateral",
      "label": "Total Collateral Deposited",
      "type": "description",
      "placement": "output"
    },
    {
      "id": "totalDebt",
      "label": "Total Debt",
      "type": "description",
      "placement": "output"
    },
    {
      "id": "collateralPriceFormatted",
      "label": "Collateral Price",
      "type": "description",
      "placement": "output"
    },
    {
      "id": "borrow",
      "label": "Borrow $DFID",
      "type": "swap",
      "placement": "input",
      "code": "",
      "config": {
        "swapConfig": {
          "heading": "Deposit Collateral",
          "fromTokenLabel": "Deposit",
          "toTokenLabel": "Borrow",
          "fromAmountLabel": "Deposit Amount",
          "maxFromAmountLabel": "Maximum Deposit Amount",
          "toAmountLabel": "Borrow Amount",
          "maxToAmountLabel": "Maximum Borrowable Amount",
          "tokens": [
            {
              "chainId": 1,
              "name": "ETH",
              "symbol": "ETH (Native)",
              "address": "1-eth",
              "decimals": 18,
              "logoURI": "https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/info/logo.png",
              "listType": "from"
            },
            {
              "chainId": 5115,
              "name": "Citrea - Bitcoin",
              "symbol": "cBTC",
              "address": "5115-cbtc",
              "decimals": 18,
              "logoURI": "https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/bitcoin/info/logo.png",
              "listType": "from"
            },
            {
              "chainId": 1,
              "name": "D.FI.Dollar",
              "symbol": "DFID",
              "address": "1-dfid",
              "decimals": 18,
              "logoURI": "https://raw.githubusercontent.com/svylabs/stablebase/main/icons/dfid/icon.png",
              "listType": "to"
            },
            {
              "chainId": 5115,
              "name": "D.FI.Dollar",
              "symbol": "DFID",
              "address": "5115-dfid",
              "decimals": 18,
              "logoURI": "https://raw.githubusercontent.com/svylabs/stablebase/main/icons/dfid/icon.png",
              "listType": "to"
            }
          ]
        }
      },
      "events": [
        {
          "type": "onLoad",
          "code": "/*\n  Fetch the total balance of the default token selected\n*/\nconst fetchTotalBalance = async (data, mcLib) => {\n  const balance = await mcLib.web3.eth.getBalance(mcLib.context.connectedAddress);\n   return {\n      borrow: {\n          ...data.borrow,\n          maxFromAmount: balance.toString()\n      }\n   }\n};\n\nfetchTotalBalance(data, mcLib);"
        },
        {
          "type": "onChange",
          "code": "/*\n  Fetch the total balance of the default token selected\n*/\nconst estimate = async (data, mcLib) => {\n    const depositAmount = data.borrow[\"fromAmount\"];\n    console.log(\"On change: estimate: \", data, depositAmount);\n    if (depositAmount) {\n      const formattedAmount = mcLib.web3.utils.toWei(depositAmount, 'ether');\n      const borrowAmount = BigInt(formattedAmount) * data.collateralPrice / BigInt(1e18);\n      return {\n          borrow: {\n              ...data.borrow,\n              maxToAmount: borrowAmount.toString()\n          }\n      }\n    } else {\n      return {};\n    }\n  };\n  \n  estimate(data, mcLib);"
        }
      ],
      "order": 0
    },
    {
      "id": "shielding_rate",
      "label": "Shielding Rate",
      "type": "slider",
      "placement": "input",
      "code": "",
      "config": {
        "sliderConfig": {
          "message": "Please specify the range of values. You can customize the minimum, maximum, value and step values below.",
          "interval": {
            "min": 0,
            "max": 3
          },
          "value": 0.2,
          "step": 0.01
        }
      },
      "events": [],
      "order": 1
    },
    {
      "id": "borrow_amount",
      "label": "You Get",
      "type": "text",
      "placement": "output",
      "code": "",
      "config": {},
      "events": [
        {
          "event": "onChange",
          "code": "const oracleAddress = \"0x5f4ec3df9cbd43714fe2740f5e3616155c5b8419\";\nconst oracleABI = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"latestAnswer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"int256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\nconst web3 = new Web3(window.ethereum);\n\nasync function estimateAmount() {\n  try {\n    const depositAmount = data[\"borrow\"]?.depositAmount || \"0\"; \n    const amount = BigInt(web3.utils.toWei(depositAmount, \"ether\"));\n\n    const oracleContract = new web3.eth.Contract(oracleABI, oracleAddress);\n\n    const price = BigInt(await oracleContract.methods.latestAnswer().call());\n\n    if (!price) {\n      console.error(\"Failed to fetch the latest price.\");\n      return { estimatedAmount: null };\n    }\n\n    const estimatedAmount = (amount * price) / BigInt(10 ** 8); \n\n    const borrow_amount = web3.utils.fromWei(estimatedAmount.toString(), \"ether\");\n\n    console.log(\"Estimated borrow_amount:\", borrow_amount);\n\n    return { borrow_amount };\n  } catch (error) {\n    console.error(\"Error fetching the price or calculating the estimated amount:\", error);\n    return { estimatedAmount: null };\n  }\n}\n\nestimateAmount();"
        }
      ],
      "order": 2
    },
    {
      "id": "initiate_borrowing",
      "label": "Initiate Borrowing",
      "type": "button",
      "placement": "action",
      "code": "const stableBaseCDPABI = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_safeId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"openSafe\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"safeId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"shieldingRate\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"nearestSpotInLiquidationQueue\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"nearestSpotInRedemptionQueue\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"borrow\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ];\n  \n  const stableBaseCDPAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n  const web3 = new Web3(window.ethereum);\n  \n  async function makeTransaction() {\n    try {\n      const account = (await web3.eth.getAccounts())[0]; \n  \n      // Step 1: Open a safe\n      const safeId = 1;\n      const depositAmount = data[\"borrow\"]?.depositAmount || \"0\";\n      const collateralAmount = web3.utils.toWei(depositAmount, \"ether\");\n  \n      console.log(\"Opening safe with ID:\", safeId, \"and collateral amount:\", collateralAmount);\n  \n      const openSafeTx = await new web3.eth.Contract(stableBaseCDPABI, stableBaseCDPAddress)\n        .methods.openSafe(safeId, collateralAmount)\n        .send({ from: account, value: collateralAmount }); // Send collateral amount as value\n  \n      console.log(\"Safe opened successfully:\", openSafeTx);\n  \n      // Step 2: Prepare parameters for borrowing\n      const borrowAmount = data[\"borrow_amount\"];\n      const shieldingRate = data[\"shielding_rate\"]; \n      const nearestSpotInLiquidationQueue = 0;\n      const nearestSpotInRedemptionQueue = 0;\n  \n      console.log(\"Starting borrow transaction with details:\", {\n        safeId,\n        borrowAmount,\n        shieldingRate,\n        nearestSpotInLiquidationQueue,\n        nearestSpotInRedemptionQueue\n      });\n  \n      // Step 3: Make the borrow transaction\n      const borrowTx = await new web3.eth.Contract(stableBaseCDPABI, stableBaseCDPAddress)\n        .methods.borrow(safeId, borrowAmount, shieldingRate, nearestSpotInLiquidationQueue, nearestSpotInRedemptionQueue)\n        .send({ from: account });\n  \n      console.log(\"Borrow transaction successful:\", borrowTx);\n    } catch (error) {\n      console.error(\"Error making the transaction:\", error);\n    }\n  }\n  \n  makeTransaction();",
      "config": {},
      "events": [],
      "order": 3
    },
    {
      "id": "description",
      "label": "Description",
      "type": "description",
      "placement": "output",
      "code": "",
      "config": {},
      "events": [
        {
          "event": "onChange",
          "code": "function descriptionText() {\n    const shieldingRate = data[\"shielding_rate\"];\n    const amount = data[\"borrow_amount\"];\n    let description;\n\n    if (shieldingRate < 0.5) {\n        description = `Shielding rate is below 0.5, indicating a lower level of shielded assets. Borrow estimated amount: ${amount}.`;\n    } else if (shieldingRate == 0.5) {\n        description = `Shielding rate is exactly 0.5, representing a balanced shielded assets ratio. Borrow estimated amount: ${amount}.`;\n    } else if (shieldingRate > 0.5) {\n        description = `Shielding rate is above 0.5, indicating a higher level of shielded assets. Borrow estimated amount: ${amount}.`;\n    }\n\n    const borrowEstimatedAmount = { description };\n    return borrowEstimatedAmount;\n}\n\ndescriptionText();"
        }
      ],
      "order": 4
    },
    {
      "id": "transactionLink",
      "label": "Transaction Link",
      "type": "link",
      "placement": "output",
      "code": "",
      "config": {
        "transactionConfig": {
          "linkType": "transaction"
        }
      },
      "events": [],
      "order": 5
    }
  ],
  "contracts": [
    {
      "name": "StableBaseCDP",
      "addresses": {
        "1": "0xaF026bf59B738bDc7FD8899a641D79a6d5cEb151",
        "5115": "0x108d105FFe07C9615939DeE88A4Fe2ECD62Acdc7"
      },
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "ERC721IncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ERC721InsufficientApproval",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "name": "ERC721InvalidApprover",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "ERC721InvalidOperator",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "ERC721InvalidOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "name": "ERC721InvalidReceiver",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "ERC721InvalidSender",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ERC721NonexistentToken",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "OwnableInvalidOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "OwnableUnauthorizedAccount",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newRatio",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "AddedCollateral",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256"
            }
          ],
          "name": "BatchMetadataUpdate",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "nearestSpotInRedemptionQueue",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "Borrowed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "sbrStakersFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stabilityPoolFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "canRefund",
              "type": "uint256"
            }
          ],
          "name": "FeeDistributed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "FeeRefund",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "topupRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newWeight",
              "type": "uint256"
            }
          ],
          "name": "FeeTopup",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "LiquidatedUsingSecondaryMechanism",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "LiquidatedUsingStabilityPool",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newRatio",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "nextNode",
              "type": "uint256"
            }
          ],
          "name": "LiquidationQueueUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "MetadataUpdate",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "OpenSafe",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            }
          ],
          "name": "Redeemed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "redeemedCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "RedeemedBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newWeight",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "prevNode",
              "type": "uint256"
            }
          ],
          "name": "RedemptionQueueUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newRatio",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "Repaid",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "refundedCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "SafeClosed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            }
          ],
          "name": "SafeRemovedFromLiquidationQueue",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            }
          ],
          "name": "SafeRemovedFromRedemptionQueue",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalCollateral",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ],
          "name": "WithdrawnCollateral",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "BOOTSTRAP_MODE_DEBT_THRESHOLD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MINIMUM_DEBT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "PROTOCOL_MODE",
          "outputs": [
            {
              "internalType": "enum SBStructs.Mode",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "REDEMPTION_LIQUIDATION_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "SBR_FEE_REWARD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "addCollateral",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "adjustPosition",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shieldingRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInRedemptionQueue",
              "type": "uint256"
            }
          ],
          "name": "borrow",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            }
          ],
          "name": "closeSafe",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cumulativeCollateralPerUnitCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cumulativeDebtPerUnitCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "topupRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInRedemptionQueue",
              "type": "uint256"
            }
          ],
          "name": "feeTopup",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "liquidate",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "liquidationSnapshots",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "collateralPerCollateralSnapshot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "debtPerCollateralSnapshot",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "mode",
          "outputs": [
            {
              "internalType": "enum SBStructs.Mode",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "name": "openSafe",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "priceOracle",
          "outputs": [
            {
              "internalType": "contract IPriceOracle",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "redeem",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "repay",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "safes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "enum IStableBase.SafeStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "safesOrderedForLiquidation",
          "outputs": [
            {
              "internalType": "contract IDoublyLinkedList",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "safesOrderedForRedemption",
          "outputs": [
            {
              "internalType": "contract IDoublyLinkedList",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sbdToken",
          "outputs": [
            {
              "internalType": "contract IMintableToken",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sbrTokenStaking",
          "outputs": [
            {
              "internalType": "contract ISBRStaking",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sbdToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_priceOracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stabilityPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_sbrTokenStaking",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_safesOrderedForLiquidation",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_safesOrderedForRedemption",
              "type": "address"
            }
          ],
          "name": "setAddresses",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "stabilityPool",
          "outputs": [
            {
              "internalType": "contract IStabilityPool",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "newTokenURI",
              "type": "string"
            }
          ],
          "name": "updateTokenURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "safeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nearestSpotInLiquidationQueue",
              "type": "uint256"
            }
          ],
          "name": "withdrawCollateral",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ]
    },
    {
      "name": "PriceOracle",
      "addresses": {
        "1": "0x4c517d4e2c851ca76d7ec94b805269df0f2201de",
        "5115": "0x8E2A54197A9F89E26F85080B63E6D969eec3733a"
      },
      "abi": [
        {
          "constant": true,
          "inputs": [],
          "name": "lastGoodPrice",
          "outputs": [
            {
              "name": "",
              "type": "int256"
            }
          ],
          "payable": false,
          "stateMutability": "view",
          "type": "function"
        }
      ]
    },
    {
      "name": "RedemptionQueue",
      "addresses": {
        "1": "0x7944588320547E46ddD0b0816E76678C0C4cB8A1",
        "5115": "0x1F9E6cCad7C8870bB40a17EdDd43a75f4bF0E440"
      },
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "get",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getHead",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "getNode",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "beginAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            }
          ],
          "name": "getNodes",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node[50]",
              "name": "n",
              "type": "tuple[50]"
            },
            {
              "internalType": "uint256",
              "name": "totalFound",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getTail",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ]
    },
    {
      "name": "LiquidationQueue",
      "addresses": {
        "1": "0x86644d53B0bD9032D16FEEE1f856767481a16884",
        "5115": "0xfaD62505b37bc196d23C3396B35e0d006fa534e2"
      },
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "get",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getHead",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "getNode",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "beginAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            }
          ],
          "name": "getNodes",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prev",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "next",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IDoublyLinkedList.Node[50]",
              "name": "n",
              "type": "tuple[50]"
            },
            {
              "internalType": "uint256",
              "name": "totalFound",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getTail",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ]
    }
  ],
  "networks": [
    {
      "type": "ethereum",
      "name": "Ethereum Mainnet",
      "config": {
        "chainId": 1
      }
    },
    {
      "type": "ethereum",
      "name": "Citrea Bitcoin Testnet",
      "config": {
        "chainId": 5115
      }
    }
  ]
}